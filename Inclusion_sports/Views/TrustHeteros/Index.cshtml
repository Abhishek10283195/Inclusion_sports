
@{
	ViewBag.Title = "Index";
	Layout = "~/Views/_MyLayoutPage.cshtml";
}

<style>
	.jumbotron {
		text-align: center;
		font-family: 'Montserrat', sans-serif;
	}
</style>

@*<h2>Index</h2>
	<h4>Add Users via Excel</h4>
		<hr />
		@using (Html.BeginForm("UploadExcel", "TrustHeteros", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return myFunction()" }))
		{
			<div class="form-horizontal">
				<div class="form-group">
					<div class="control-label col-md-2">Download Format:</div>
					<div class="col-md-10">
						<a href="/User/DownloadExcel/"><img src="~/excel.ico" width="25" height="25" title="Download Excel format" alt="excel" /></a>
					</div>
				</div>
				<div class="form-group">
					<div class="control-label col-md-2">Excel:</div>
					<div class="col-md-10">
						<input type="file" id="FileUpload" name="FileUpload" class="" />
					</div>
				</div>
				<div class="form-group">
					<div class="col-md-offset-2 col-md-10">
						<input type="submit" value="Upload" id="btnSubmit" class="btn btn-primary" />
					</div>
				</div>
			</div>
		}*@
@*<p>
		@Html.ActionLink("Create New", "Create")
	</p>
	<table class="table">
		<tr>
			<th>
				@Html.DisplayNameFor(model => model.Type)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Degree)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.Percentage)
			</th>
			<th></th>
		</tr>

		@foreach (var item in Model)
		{
			<tr>
				<td>
					@Html.DisplayFor(modelItem => item.Type)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Degree)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Percentage)
				</td>
				<td>
					@Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
					@Html.ActionLink("Details", "Details", new { id = item.Id }) |
					@Html.ActionLink("Delete", "Delete", new { id = item.Id })
				</td>
			</tr>
		}

	</table>*@


<section class="viewHeader", style="top: 100px;">
	<div class="jumbotron">
		<div class="title">
			@*<h4>FIND SPORTS CLUBS AROUND YOU</h4>
			<p>Search for a postcode or the type of sports you prefer from the tabel</p>
			<p>Search for LGBT exclusive clubs from the table or the map</p>
			<p>Switch between Table view and Map view</p>*@
			<button class="btn btn-default" id="ht">Heterosexual group</button>
			<button class="btn btn-default" id="hm">Homosexual group</button>
		</div>
	</div>
</section>

<section id="charts" style="top:100px">
		<div class="col-lg-12 col-md-12" id="chartContainer" style="height: 400px;"></div>

		<div class="col-lg-12 col-md-12" id="chartContainer2" style="height: 400px; visibility:hidden"></div>
</section>

@section Scripts {
	<script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
	<script type="text/javascript">

		$(document).ready(function () {
			$("#ht").click(function () {
				$("#chartContainer").show();
				document.getElementById("chartContainer2").style.visibility = "hidden";
			});
			$("#hm").click(function () {
				$("#chartContainer").hide();
				document.getElementById("chartContainer2").style.visibility = "visible";
			});
		});

window.onload = function () {

var chart = new CanvasJS.Chart("chartContainer", {
	animationEnabled: true,
	title: {
		text: "Trust Levels - Heterosexual group",
		fontColor: "#322D31"
	},
	axisY: {
		suffix: "%",
		interval: 20
	},
	toolTip: {
		shared: true
	},
	data: [{
		type: "stackedBar100",
		name: "Strongly agree / Somewhat agree",
		showInLegend: true,
		color: "#7E7D9C",
		yValueFormatString: "#,##0\"%\"",
		indexLabel: "{y}",
		indexLabelFontSize: 17,
		dataPoints: @Html.Raw(ViewBag.DataPoints1),
		indexLabelFontColor: "#F4F6F5"
	},
	{
		type: "stackedBar100",
		name: "Neither agree nor disagree",
		showInLegend: true,
		color: "#ADADC7",
		yValueFormatString: "#,##0\"%\"",
		indexLabel: "{y}",
		indexLabelFontSize: 17,
		dataPoints: @Html.Raw(ViewBag.DataPoints2),
		indexLabelFontColor: "#F4F6F5"
	},
	{
		type: "stackedBar100",
		name: "Somewhat disagree / Strongly disagree",
		showInLegend: true,
		color: "#9897A9",
		yValueFormatString: "#,##0\"%\"",
		indexLabel: "{y}",
		indexLabelFontSize: 17,
		dataPoints: @Html.Raw(ViewBag.DataPoints3),
		indexLabelFontColor: "#F4F6F5"
	}]
});
chart.render();

var chart2 = new CanvasJS.Chart("chartContainer2", {
	animationEnabled: true,
	title: {
		text: "Trust Levels - Homosexual group",
		fontColor: "#322D31"
	},
	axisY: {
		suffix: "%",
		interval: 20
	},
	toolTip: {
		shared: true
	},
	data: [{
		type: "stackedBar100",
		name: "Strongly agree / Somewhat agree",
		showInLegend: true,
		color: "#7E7D9C",
		yValueFormatString: "#,##0\"%\"",
		indexLabel: "{y}",
		indexLabelFontSize: 17,
		dataPoints: @Html.Raw(ViewBag.DataPoints4),
		indexLabelFontColor: "#F4F6F5"
	},
	{
		type: "stackedBar100",
		name: "Neither agree nor disagree",
		showInLegend: true,
		color: "#ADADC7",
		yValueFormatString: "#,##0\"%\"",
		indexLabel: "{y}",
		indexLabelFontSize: 17,
		dataPoints: @Html.Raw(ViewBag.DataPoints5),
		indexLabelFontColor: "#F4F6F5"
	},
	{
		type: "stackedBar100",
		name: "Somewhat disagree / Strongly disagree",
		showInLegend: true,
		color: "#9897A9",
		yValueFormatString: "#,##0\"%\"",
		indexLabel: "{y}",
		indexLabelFontSize: 17,
		dataPoints: @Html.Raw(ViewBag.DataPoints6),
		indexLabelFontColor: "#F4F6F5"
	}]
});
chart2.render();

}
	</script>
}

