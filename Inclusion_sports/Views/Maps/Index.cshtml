@model IEnumerable<Inclusion_sports.Models.Map>

@{
	ViewBag.Title = "Find Clubs";
	Layout = "~/Views/_MyLayoutPage.cshtml";
}
<style>
	input.chk-btn {
		display: none;
	}

		input.chk-btn + label {
			border: 1px solid grey;
			background: ghoswhite;
			padding: 5px 8px;
			cursor: pointer;
			border-radius: 5px;
		}

		input.chk-btn:not(:checked) + label:hover {
			box-shadow: 0px 1px 3px;
		}

		input.chk-btn + label:active,
		input.chk-btn:checked + label {
			box-shadow: 0px 0px 3px inset;
			background: #8cc472;
		}
</style>
@*<style>
	/*	.map {
			margin: 10px 0px;
			padding-top: 30px;
		}*/
		.map-position {
			position: fixed;
			top: 130px;
			left: 50%;
	/*		margin-left: 60%;*/
			min-width: 100%;
			min-height: 50%;
			width: auto;
			height: 50%;
	/*		transform: translate(-50%, -50%);*/
		}
			.filter-wrapper .filter-checkbox {
				margin-left: 50px;
			}

			.filter-wrapper label {
				font-size: medium;
			}

			.filter-wrapper .filter-checkbox:first-child {
				margin-left: 0px;
			}

			.table {
				font-size: medium;
			}
	</style>*@
@*<h4>Add Users via Excel</h4>
		<hr />
		@using (Html.BeginForm("UploadExcel", "Maps", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return myFunction()" }))
		{
			<div class="form-horizontal">
				<div class="form-group">
					<div class="control-label col-md-2">Download Format:</div>
					<div class="col-md-10">
						<a href="/User/DownloadExcel/"><img src="~/excel.ico" width="25" height="25" title="Download Excel format" alt="excel" /></a>
					</div>
				</div>
				<div class="form-group">
					<div class="control-label col-md-2">Excel:</div>
					<div class="col-md-10">
						<input type="file" id="FileUpload" name="FileUpload" class="" />
					</div>
				</div>
				<div class="form-group">
					<div class="col-md-offset-2 col-md-10">
						<input type="submit" value="Upload" id="btnSubmit" class="btn btn-primary" />
					</div>
				</div>
			</div>
		}
	<p>
			@Html.ActionLink("Create New", "Create")
		</p>*@
<script src="https://code.jquery.com/jquery-3.3.1.js"></script>
<script src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.10.19/js/dataTables.bootstrap4.min.js"></script>
<head>
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.1/css/bootstrap.css">
	<link rel="stylesheet" href="https://cdn.datatables.net/1.10.19/css/dataTables.bootstrap4.min.css">

</head>
<div class="container">
	<div class="content">
		<div class="row">
			<div class="col-8">
				<div class="filter-wrapper">
					<input id="cbox1" type="checkbox" class="filter-checkbox" value="LGBT" />
					<label for="cbox1">LGBT</label>
					<input id="cbox2 " type="checkbox" class="filter-checkbox" value="General" />
					<label for="cbox2">General</label>
				</div>
			</div>
		</div>
	</div>
</div>
<div>
	<div class="container-fuild">
		<div class="col-md-6">
			<table class="table">
				<thead>
					<tr>
						<th>
							@Html.DisplayNameFor(model => model.Name)
						</th>
						<th>
							@Html.DisplayNameFor(model => model.Address)
						</th>
						<th>
							@Html.DisplayNameFor(model => model.Sports)
						</th>
						<th>
							@Html.DisplayNameFor(model => model.Diversity)
						</th>
						<th></th>
					</tr>
				</thead>
				<tbody>
					@foreach (var item in Model)
					{
						<tr class="coordinates">
							<td class="name">
								@Html.DisplayFor(modelItem => item.Name)
							</td>
							<td>
								@Html.DisplayFor(modelItem => item.Address)
							</td>
							<td>
								@Html.DisplayFor(modelItem => item.Sports)
							</td>
							<td>
								@Html.DisplayFor(modelItem => item.Diversity)
							</td>
							<td>
								@Html.ActionLink("Details", "Details", new { id = item.Id })
							</td>
						</tr>
					}
				</tbody>
			</table>
		</div>
		<div class="col-md-6" id="buttons">

			<input type="checkbox" name="filter" id="LGBT" class='chk-btn'>
			<label for='LGBT'>LGBT</label>

			<input type="checkbox" name="filter" id="General" class='chk-btn'>
			<label for='General'>General</label>
			<br>
		</div>
		<br>
		<div class="col-md-6" id="MapDiv" style="width: 500px; height: 500px"></div>
		<div class="col-md-6" id="campground_info"></div>
	</div>
</div>
@section Scripts {
	@Scripts.Render("~/Scripts/DataTables/jquery.dataTables.js")
	@Scripts.Render("~/Scripts/DataTables/dataTables.bootstrap.js")
	<script>
		$(document).ready(function () {
			dataTable = $('.table').DataTable({
				language: {
					searchPlaceholder: "Postcode,Sport etc.",
					search: "",
				}
			});
		});


		$('.filter-checkbox').on('change', function (e) {
			var searchTerms = []
			$.each($('.filter-checkbox'), function (i, elem) {
				if ($(elem).prop('checked')) {
					searchTerms.push("^" + $(this).val() + "$")
				}
			})
			dataTable.column(3).search(searchTerms.join('|'), true, false, true).draw();
		});


	</script>
	<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB2zNOkQ0ev-uxWXosXHAY4vHSNQ7s0phg"></script>
	<script>
		var map;
		var markers = [];

		// start out with filter features set to false, so no filtering happens by default
		var filters = { LGBT: false, General: false };

		$(function () {
			$("input[name=filter]").change(function (e) {
				map_filter(this.id);
				filter_markers();
			});
		});

		var get_set_options = function () {
			ret_array = [];
			for (option in filters) {
				if (filters[option]) {
					ret_array.push(option);
				}
			}
			return ret_array;
		};

		var filter_markers = function () {
			set_filters = get_set_options();

			// for each marker, check to see if all required options are set
			for (i = 0; i < markers.length; i++) {
				marker = markers[i];

				// start the filter check assuming the marker will be displayed
				// if any of the required features are missing, set 'keep' to false
				// to discard this marker
				keep = true;
				mapset = map;
				for (opt = 0; opt < set_filters.length; opt++) {
					if (!marker.properties[set_filters[opt]]) {
						keep = false;
					}
				}
				marker.setVisible(keep);
			}
		};

		var map_filter = function (id_val) {
			if (filters[id_val]) filters[id_val] = false;
			else filters[id_val] = true;
		};

		// after the geojson is loaded, iterate through the map data to create markers
		// and add the pop up (info) windows
		function loadMarkers(markers) {
			console.log(markers);
			var GoogleMapOptions = {
				center: new google.maps.LatLng(markers[0].lat, markers[0].lng),
				zoom: 6,
				mapTypeId: google.maps.MapTypeId.ROADMAP
			};
			var infoWindow = new google.maps.InfoWindow();
			var map = new google.maps.Map(document.getElementById("MapDiv"), GoogleMapOptions);
			for (i = 0; i < markers.length; i++) {
				// Post select to url.
				var data = markers[i]
				var myLatlng = new google.maps.LatLng(data.lat, data.lng);
				var marker = new google.maps.Marker({
					position: myLatlng,
					title: data.title,
					map: map,
/*						properties: val["properties"]*/
					});

					var markerInfo =
						"<div><h3>" +
						data.title +
						"</h3>Diversity: " +
						data.description +
						"</div>";
				(function (marker, data) {
					google.maps.event.addListener(marker, "click", function (e) {
						infoWindow.close();
						infoWindow.setContent(data.title);
						infoWindow.open(map, marker);
					});					
				})(marker, data);
			}
		}

		function initMap() {
			$.ajax({
				url: '/Maps/GetMapMarker',
				type: 'GET',
				success: function (data) {
					//create a blank array
					var markers = [];

					//loop the list of addresses returned from Ajax request
					$.each(data, function (index, item) {
						//create a blank array of address
						var marker = {};
						//fill data
						marker["title"] = item.Name;
						marker["lat"] = item.Latitude;
						marker["lng"] = item.Longitude;
						marker["description"] = item.Diversity;

						//push the current marker details in markers array
						markers.push(marker);
					})
					//call Map function with all markers passed as list of arrays
					loadMarkers(markers);

				}
			});
			//map_options = {
			//	zoom: 10,
			//	mapTypeId: google.maps.MapTypeId.HYBRID,
			//	center: { lat: 42.9456, lng: -122.2 }
			//};

			//map_document = document.getElementById("MapDiv");
			//map = new google.maps.Map(map_document, map_options);
			//loadMarkers();
		}

		google.maps.event.addDomListener(window, "load", initMap);

	</script>

}











