@model IEnumerable<Inclusion_sports.Models.Map>

@{
	ViewBag.Title = "Find Clubs";
	Layout = "~/Views/_MyLayoutPage.cshtml";
}
<style>
	#MapDiv {
		position: center;
	}
	.jumbotron {
		text-align: center;
		font-family: 'Montserrat', sans-serif;
	}
	.viewHeader {
		top:100px;
	}


	.tableheader {
		top: 140px;
	}
	.thistable {
		top:180px;
	}

	.filter-wrapper {
		margin-left: 50px;
		left: 50px;
	}

	.filter-wrapper label {
		font-size: medium;
	}

	.filter-wrapper .filter-checkbox:first-child {
		margin-left: 0px;
	}
	input.chk-btn {
		display: none;
	}

	input.chk-btn + label {
		border: 1px solid grey;
		background: ghoswhite;
		padding: 5px 8px;
		cursor: pointer;
		border-radius: 5px;
	}

	input.chk-btn:not(:checked) + label:hover {
		box-shadow: 0px 1px 3px;
	}

	input.chk-btn + label:active,
	input.chk-btn:checked + label {
		background: ghoswhite;
	}
</style>

@*<h4>Add Users via Excel</h4>
		<hr />
		@using (Html.BeginForm("UploadExcel", "Maps", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return myFunction()" }))
		{
			<div class="form-horizontal">
				<div class="form-group">
					<div class="control-label col-md-2">Download Format:</div>
					<div class="col-md-10">
						<a href="/User/DownloadExcel/"><img src="~/excel.ico" width="25" height="25" title="Download Excel format" alt="excel" /></a>
					</div>
				</div>
				<div class="form-group">
					<div class="control-label col-md-2">Excel:</div>
					<div class="col-md-10">
						<input type="file" id="FileUpload" name="FileUpload" class="" />
					</div>
				</div>
				<div class="form-group">
					<div class="col-md-offset-2 col-md-10">
						<input type="submit" value="Upload" id="btnSubmit" class="btn btn-primary" />
					</div>
				</div>
			</div>
		}
	<p>
			@Html.ActionLink("Create New", "Create")
		</p>*@

<head>
	@*<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.1/css/bootstrap.css">*@
	<link rel="stylesheet" href="https://cdn.datatables.net/1.10.19/css/dataTables.bootstrap4.min.css">

</head>

<section class="viewHeader">
	<div class="jumbotron">
		<div class="title">
			<h4>FIND SPORTS CLUBS AROUND YOU</h4>
			<p>Search for a postcode or the type of sports you prefer from the tabel</p>
			<p>Search for LGBT exclusive clubs from the table or the map</p>
			<p>Switch between Table view and Map view</p>
			<button class="button button-secondary button-pipaluk" id="tbl">Table view</button>
			<button class="button button-secondary button-pipaluk" id="mp">Map View</button>
		</div>
	</div>
</section>


<section class="tableheader">
	<div id="allitems">
		<div class="content">
			<div class="row">
				<div class="col-8">
					<div class="filter-wrapper">
						<p>Filter LGBT exclusive clubs</p>
						<input id="cbox1" type="checkbox" class="filter-checkbox" value="LGBT" />
						<label id="filterLabel1" for="cbox1">LGBT</label>
						
					</div>
				</div>
			</div>
		</div>
	</div>
</section>
<div>
	<section class="thistable">
		<table class="table" id="thistable">
			<thead>
				<tr>
					<th>
						@Html.DisplayNameFor(model => model.Name)
					</th>
					<th>
						@Html.DisplayNameFor(model => model.Address)
					</th>
					<th>
						@Html.DisplayNameFor(model => model.Sports)
					</th>
					<th>
						@Html.DisplayNameFor(model => model.Diversity)
					</th>
					<th></th>
				</tr>
			</thead>
			<tbody>
				@foreach (var item in Model)
				{
					<tr class="coordinates">
						<td class="name">
							@Html.DisplayFor(modelItem => item.Name)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.Address)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.Sports)
						</td>
						<td>
							@Html.DisplayFor(modelItem => item.Diversity)
						</td>
						<td>
							@Html.ActionLink("Details", "Details", new { id = item.Id })
						</td>
					</tr>
				}
			</tbody>
		</table>
	</section>
	<section class="thismap" style="top: 10px">
		<div class="toggle-buttons" style="display:none">

			<input type="checkbox" name="filter" id="LGBT" class='chk-btn'>
			<label for='LGBT'>LGBT</label>

			<input type="checkbox" name="filter" id="General" class='chk-btn'>
			<label for='General'>General</label>

			<input type="checkbox" name="filter" id="clear" class='chk-btn'>
			<label for='clear'>Clear Filters</label>
			<br>
		</div>
		<br>
		<div id="MapDiv" style="display:none; width:stretch; height: 500px"></div>
	</section>
</div>
@section Scripts {
	@Scripts.Render("~/Scripts/DataTables/jquery.dataTables.js")
	@Scripts.Render("~/Scripts/DataTables/dataTables.bootstrap.js")
	<script>
		$(document).ready(function () {
			dataTable = $('.table').DataTable({
				language: {
					searchPlaceholder: "Postcode,Sport etc.",
					search: "",
				}
			});
		});


		$('.filter-checkbox').on('change', function (e) {
			var searchTerms = []
			$.each($('.filter-checkbox'), function (i, elem) {
				if ($(elem).prop('checked')) {
					searchTerms.push("^" + $(this).val() + "$")
				}
			})
			dataTable.column(3).search(searchTerms.join('|'), true, false, true).draw();
		});


	</script>
	<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB2zNOkQ0ev-uxWXosXHAY4vHSNQ7s0phg"></script>
	<script>
		$(document).ready(function () {
			$("#mp").click(function () {
				$("#MapDiv").toggle();
				$(".toggle-buttons").show();
				$("#thistable_wrapper").hide();
				$(".filter-checkbox").hide();
				$("#filterLabel1").hide();
				$("#filterLabel2").hide();
			});
			$("#tbl").click(function () {
				$("#thistable_wrapper").toggle();
				$("#MapDiv").hide();
				$(".toggle-buttons").hide();
				$(".filter-checkbox").show();
				$("#filterLabel1").show();
				$("#filterLabel2").show();
			});
		});
	</script>
	<script>


		var map;
		var markers = [];
		var filteredMarkers = [];


			// after the geojson is loaded, iterate through the map data to create markers
			// and add the pop up (info) windows
			function loadMarkers(markers) {
				console.log(markers);
				var GoogleMapOptions = {
					center: new google.maps.LatLng(markers[0].lat, markers[0].lng),
					zoom: 6,
					mapTypeId: google.maps.MapTypeId.ROADMAP
				};
				var infoWindow = new google.maps.InfoWindow();
				map = new google.maps.Map(document.getElementById("MapDiv"), GoogleMapOptions);
				for (i = 0; i < markers.length; i++) {
					// Post select to url.
					var data = markers[i]
					var myLatlng = new google.maps.LatLng(data.lat, data.lng);
					var marker = new google.maps.Marker({
					position: myLatlng,
					title: data.title,
/*					map: map,*/
					properties: data.description
					});
					marker.setMap(map);
					filteredMarkers.push(marker);
					
					(function (marker, data) {
						google.maps.event.addListener(marker, "click", function (e) {
							infoWindow.close();
							var markerInfo = "<div><h3>" + data.title + "</h3>Diversity: " + data.description + "<br />Sports: " + data.sports + "</div>";
						infoWindow.setContent(markerInfo);
						infoWindow.open(map, marker);
						});
					})(marker, data);
				}
			}

			function initMap() {
				$.ajax({
					url: '/Maps/GetMapMarker',
					type: 'GET',
					success: function (data) {


						//loop the list of addresses returned from Ajax request
						$.each(data, function (index, item) {
							//create a blank array of address
							var markerex = {};
							//fill data
							markerex["title"] = item.Name;
							markerex["lat"] = item.Latitude;
							markerex["lng"] = item.Longitude;
							markerex["description"] = item.Diversity;
							markerex["sports"] = item.Sports;
						

							//push the current marker details in markers array
							markers.push(markerex);
						})
						//call Map function with all markers passed as list of arrays
						loadMarkers(markers);

					}
				});

			}

		google.maps.event.addDomListener(window, "load", initMap);

		function filterLGBT() {
			console.log(filteredMarkers);
			for (i = 0; i < filteredMarkers.length; i++) {
				if (filteredMarkers[i].properties == "LGBT")
					filteredMarkers[i].setMap(map);
				else
					filteredMarkers[i].setMap(null);
			}
		}

		function filterGeneral() {
			console.log(filteredMarkers);
			for (i = 0; i < filteredMarkers.length; i++) {
				if (filteredMarkers[i].properties == "General")
					filteredMarkers[i].setMap(map);
				else
					filteredMarkers[i].setMap(null);
			}
		}


		function clearFilters() {
			
			for (i = 0; i < filteredMarkers.length; i++)
					filteredMarkers[i].setMap(map);

		}
		document.getElementById("LGBT").onclick = filterLGBT;
		document.getElementById("General").onclick = filterGeneral;
		document.getElementById("clear").onclick = clearFilters;


	</script>


}







